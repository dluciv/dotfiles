[user]
	email = dluciv@dluciv.name
	name = Dmitry V. Luciv

{{/* Всякий раз 50 раз подумать, нужен ли нам LFS, прежде чем связываться. */ -}}
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[http]
{{- /* https://stackoverflow.com/a/38703069 */}}
	postBuffer = 524288000

[core]
{{- /* https://stackoverflow.com/a/22575737 */}}
{{- if .windows }}
	longpaths = true
{{- end }}
	editor = {{ if lookPath "mcedit" }}mcedit{{ else if lookPath "nvim" }}nvim{{ else }}vim{{ end }}
	autocrlf = {{if .windows }}true{{else}}input{{end}}
	quotepath = false
{{- if .darwin }}
	precomposeunicode = true
{{- end }}

{{ if lookPath "difft" -}}
[diff]
        tool = difftastic

[difftool]
        prompt = false

[difftool "difftastic"]
        cmd = difft "$LOCAL" "$REMOTE"

[pager]
        difftool = true
{{ else if lookPath "mcdiff" -}}
[diff]
        tool = mcdiff

[difftool]
        prompt = false

[difftool "mcdiff"]
        cmd = mcdiff "$LOCAL" "$REMOTE"

[pager]
        difftool = true
{{ end -}}

{{ if (and (not .headless) (lookPath "meld")) -}}
[merge]
        tool = meld
[mergetool "meld"]
        cmd = meld --diff "$BASE" "$LOCAL" "$REMOTE" --output "$MERGED"
{{ end -}}

{{/* Windows =) */ -}}

{{ if lookPath "pandoc" -}}
[diff "pandoc"]
	binary = true
	textconv = pandoc --to=markdown
	prompt = false

{{ end -}}

{{ if lookPath "catdoc" -}}
[diff "catdoc"]
	binary = true
	textconv = catdoc
	prompt = false

{{ end -}}

{{ if lookPath "antiword" -}}
[diff "antiword"]
	binary = true
	textconv = sh -c 'antiword "$0"'
	prompt = false

{{ end -}}

{{ if lookPath "pdftotext" -}}
[diff "pdftotext"]
	binary = true
	textconv = sh -c 'pdftotext -layout "$0" -enc UTF-8 - 2>/dev/null'
	prompt = false

{{ end -}}

{{ if lookPath "soffice" -}}
[diff "soffice"]
	binary = true
	textconv = sh -c 'soffice --headless --cat "$0"'
	prompt = false

{{ end -}}

{{ if lookPath "ssconvert" -}}
[diff "ssconvert"]
	binary = true
	textconv = sh -c 'ssconvert --export-type=Gnumeric_stf:stf_assistant --export-options= "$0"'
	prompt = false

{{ end -}}

{{ if lookPath "spreadsheet-git-filter" -}}
[diff "spreadsheet-git-filter"]
	binary = true
	textconv = sh -c 'spreadsheet-git-filter "$0"'
	prompt = false

{{ end -}}

[alias]
	wdiff='diff --word-diff=color --unified=1'

[gui]
	encoding = utf-8
	fontui   = -family \"{{ .style.fav_font_name_nf_mono }}\" -size 12
	fontdiff = -family \"{{ .style.fav_font_name_nf_mono }}\" -size 12

{{/* На GitHub удобно аутентифицироваться его собственной тулзой. */ -}}
[credential "https://github.com"]
	helper =
	helper = !gh auth git-credential
[credential "https://gist.github.com"]
	helper =
	helper = !gh auth git-credential

[credential]
{{- if not .windows }}
	helper = cache --timeout 36000
{{- end }}
{{- if .darwin }}{{/* У OSX в /usr/local/etc/gitconfig есть helper = osxkeychain, ничего не добавляем */}}
{{- else if (or .termux (and .linux .headless)) }}
    {{- /* Просто текстовый файл с паролями. Лучше использоавть пароли приложений. */}}
	helper = store
{{- else if and .linux .headful }}
    helper = libsecret
{{- else if .windows }}
	{{- /* На lucent git-credential-manager-core в системном gitconfig не работает */}}
	# helper =
	helper = wincred

[credential "helperselector"]
	selected = wincred
{{- else }}
# Что ты такое?..
{{- end }}

{{- /* Нужно установить https://github.com/hickford/git-credential-oauth, но пусть будет последний, ибо неудобен. */}}
{{- if not .windows }}
	helper = oauth
{{- end }}

{{- if (and (hasKey . "git") (hasKey .git "safefolders")) }}
{{- /*
In Unix, ~/.config/.chezmoi.local.<hostname>.toml , in Windows, AppData\Roaming
[data.git]
    safefolders = ["/../../.."]
*/}}
[safe]
{{-   range $index, $element := .git.safefolders }}
	directory = "{{ $element }}"
{{-   end }}
{{- end }}

[include]
	path = ~/.gitconfig.local
