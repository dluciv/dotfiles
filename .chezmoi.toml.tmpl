{{- $server   := false -}}
{{- $headless := false -}}
{{- $mobile   := false -}}
{{- $termux   := false -}}
{{- $windows  := false -}}
{{- $darwin   := false -}}
{{- $linux    := false -}}
{{- $headful  := false -}}

{{- $usr_prefix := "/usr" -}}

{{- $home_dir  := "~"   -}}
{{- $abs_home_dir  := env "HOME" -}}

{{- $abs_local_cfg_dir := printf "%s/.config" $abs_home_dir -}}
{{- if (ne (env "XDG_CONFIG_HOME") "") -}}
{{-   $abs_local_cfg_dir = env "XDG_CONFIG_HOME" -}}
{{- end }}
{{- $abs_roamg_cfg_dir := $abs_local_cfg_dir -}}

{{- "" -}}

{{- if eq .chezmoi.os "linux" -}}
{{-   $linux = true -}}
{{-   if or (eq (env "XDG_SESSION_TYPE") "tty" "") (ne (env "SSH_TTY") "") -}}
{{-     $server = true   -}}
{{-     $headless = true -}}
{{-   end -}}
{{- else if eq .chezmoi.os "windows" -}}
{{-   $windows = true -}}
{{-   $home_dir = env "USERPROFILE" | replaceAllRegex "\\\\" "/" -}}
{{-   $abs_home_dir = env "USERPROFILE" | replaceAllRegex "\\\\" "/" -}}
{{-   $abs_local_cfg_dir = env "LOCALAPPDATA" | replaceAllRegex "\\\\" "/" -}}
{{-   $abs_roamg_cfg_dir = env "APPDATA" | replaceAllRegex "\\\\" "/" -}}
{{- else if eq .chezmoi.os "darwin" -}}
{{-   $darwin = true -}}
{{- else if eq .chezmoi.os "android" -}}
{{-   $mobile = true -}}
{{-   $termux = true -}}
{{-   $linux  = true -}}
{{- end -}}

[data]
    # Autogenerated to derive variables, do not edit. os='{{ .chezmoi.os }}', $OSTYPE='{{ env "OSTYPE" }}', $HOME='{{ env "HOME" }}'.
    server   = {{ $server }}
    headless = {{ $headless }}
    headful  = {{ not $headless }}
    mobile   = {{ $mobile }}

    termux   = {{ $termux }}
    windows  = {{ $windows }}
    linux    = {{ $linux }}
    darwin   = {{ $darwin }}
    cygwin   = {{ $windows }}

    usr_prefix = {{ if $termux }}{{ env "PREFIX" | quote }}{{else}}"/usr"{{ end }}
    home_dir = "{{ $home_dir }}"
    abs_home_dir = "{{ $abs_home_dir }}"

    abs_local_cfg_dir = "{{ $abs_local_cfg_dir }}"
    abs_roamg_cfg_dir = "{{ $abs_roamg_cfg_dir }}"

[data.tools]
    # misc tools
{{- if $linux }}
    # wlr_lock = "waylock"
    wlr_lock = "swaylock --show-failed-attempts"
{{- end }}

{{- /* Максимально непортабельно -- исключительно под мои личные компьютеры */}}
[data.dpi]
    normal = "normal"
    high   = "high"
    retina = "retina"
    level = {{ if $darwin }}"retina"{{ else if $windows }}"normal"{{ else }}"high"{{ end }}

[data.style]
{{- /* [ "ss16" ] -- стиль PT Mono, [ "cv86" ] а где-то [ "cv03" ] -- плоская троечка */}}
{{- if $windows }}
    fav_font_full_name = "Iosevka Term"
    fav_font_name = "IosevkaTerm NFM"
    fav_font_name_nf = "IosevkaTerm NFM"
    fav_font_name_nf_mono = "IosevkaTerm NFM"
    fav_font_psname = "Iosevka-Term-NFM"
    fav_font_psname_nf = "Iosevka-Term-NFM"
    fav_font_variants = [ "cv03" ]
{{- else if $darwin }}
    fav_font_full_name = "Iosevka Term"
    fav_font_name = "Iosevka Term"
    fav_font_name_nf = "IosevkaTerm Nerd Font"
    fav_font_name_nf_mono = "IosevkaTerm Nerd Font Mono"
    fav_font_psname = "Iosevka-Term"
    fav_font_psname_nf = "IosevkaTermNF"
    fav_font_variants = [ "cv03" ]
{{- else }}{{- /* Linux */}}
    fav_font_full_name = "Iosevka Term"
    fav_font_name = "IosevkaTerm"
    fav_font_name_nf = "IosevkaTerm NF"
    fav_font_name_nf_mono = "IosevkaTerm NFM"
    fav_font_psname = "Iosevka-Term"
    fav_font_psname_nf = "IosevkaTermNF"
    fav_font_variants = [ "cv03" ]
{{- end }}

[data.style.colors]
{{ includeTemplate "color_theme.yml" | fromYaml | toToml }}

{{- if or $headless $termux }}
[diff]
    command = "nvim"
    args = ["-d",     "{{ "{{" }} .Destination {{ "}}" }}",                                  "{{ "{{" }} .Target {{ "}}" }}"]
[merge]
    command = "nvim"
    args = ["-d",     "{{ "{{" }} .Destination {{ "}}" }}", "{{ "{{" }} .Source {{ "}}" }}", "{{ "{{" }} .Target {{ "}}" }}"]
{{- else }}
[diff]
    command = "meld"
    args = ["--diff", "{{ "{{" }} .Destination {{ "}}" }}",                                  "{{ "{{" }} .Target {{ "}}" }}"]
[merge]
    command = "meld"
    args = [          "{{ "{{" }} .Destination {{ "}}" }}", "{{ "{{" }} .Source {{ "}}" }}", "{{ "{{" }} .Target {{ "}}" }}"]
{{- end }}

[data.gopass]
    mounts = []
