;; === Всякая кастомизация
(custom-set-variables
 '(column-number-mode t)
 '(custom-enabled-themes '(misterioso))
 '(fringe-mode nil nil (fringe))
 '(global-display-line-numbers-mode t)
 '(inhibit-startup-screen t)
 '(menu-bar-mode nil)
 '(size-indication-mode t)
 '(tool-bar-mode nil)
 '(current-language-environment "Russian")
 '(default-input-method "russian-computer")
 '(ispell-dictionary "ru_RU")
 '(org-startup-truncated nil)
 '(org-agenda-files  (append
   (file-expand-wildcards "{{ .home_dir }}/ORG/TODO/*.org")
   (file-expand-wildcards "{{ .home_dir }}/ORG/TODO/**/*.org")
   ))
 '(use-package-always-ensure t)
 )

;; === Это любимый шрифт взамен шрифтов по умолчанию
(custom-set-faces
 '(default ((t (:family "{{ .style.fav_font_name_nf_mono }}" :foundry "UKWN" :slant normal :weight normal :height {{ if eq .dpi.level .dpi.normal }}140{{ else if eq .dpi.level .dpi.retina }}180{{else}}165{{ end }} :width normal))))
 '(mode-line ((t (:background "gray30" :box (:line-width (1 . 1) :color "dark gray") :family "{{ .style.fav_font_name_nf_mono }}"))))
 '(markdown-inline-code-face ((t (:inherit font-lock-constant-face))))
 '(markdown-code-face ((t (:inherit font-lock-constant-face))))
 )

;; === Это чтобы было побольше UTF-8 везде, где можно и нельзя, но только где надо =)
(set-language-environment 'utf-8)
(prefer-coding-system 'utf-8)
(setq default-buffer-file-coding-system 'utf-8)
(set-terminal-coding-system 'utf-8)
(set-keyboard-coding-system 'utf-8)
(setq-default default-buffer-file-coding-system 'utf-8)
(setq-default coding-system 'utf-8)
(setq-default selection-coding-system 'utf-8)
(setq-default coding-system-for-read 'utf-8)
(setq-default coding-system-for-write 'utf-8)
;;(setq-default default-process-coding-system 'utf-8)
{{- if .windows }}
(set-clipboard-coding-system 'utf-16le-dos)
{{- end }}

;; === Это чтобы как у нас, а не как где попало
(setq-default calendar-week-start-day 1)

;; === Это чтобы работали пакеты
(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
(package-initialize)

(require 'use-package)

;; === Org дополнительные настройки
(setq org-todo-keywords
      '((sequence "TODO(t)" "NEXT(n)" "WAITING(w)" "|" "DONE(d)" "DELEGATED(e)" "CANCELLED(c)" "FAILED(f)")))

;; === Org-Roam basic configuration
;; https://lucidmanager.org/productivity/taking-notes-with-emacs-org-mode-and-org-roam/
;; M-x package-install RET org-roam RET
(setq org-directory "{{ .home_dir }}/ORG/")

(use-package org-roam
  :after org
  :custom
  (org-roam-directory (file-truename org-directory))
  :init
  (progn
    (require 'org-roam)
    (require 'org-roam-protocol)
    (org-roam-setup))
  :bind (("C-c n f" . org-roam-node-find)
         ("C-c n r" . org-roam-node-random)
         (:map org-mode-map
               (("C-c n i" . org-roam-node-insert)
                ("C-c n o" . org-id-get-create)
                ("C-c n t" . org-roam-tag-add)
                ("C-c n a" . org-roam-alias-add)
                ("C-c n l" . org-roam-buffer-toggle)))))

(use-package org-roam-ui)

;; === ORG-LaTeX
(use-package org-latex-impatient)

;; === Org-Superstar configuration
;; https://sophiebos.io/posts/prettifying-emacs-org-mode/#bullets
;; M-x package-install RET org-superstar RET
(use-package org-superstar
  :config
  (setq org-superstar-leading-bullet " ")
  (setq org-superstar-headline-bullets-list '("◉" "○○" "⚬⚬⚬" "◈◈◈◈" "◇◇◇◇◇"))
  :hook (org-mode . org-superstar-mode))

;; === Это чтобы менять язык ввода в системе, а не в редакторе, но чтобы редактор
;; === продолжал работать: https://www.alexkorablev.ru/2017/06/10/emacs-got-keys/
(defun reverse-input-method (input-method)
  "Build the reverse mapping of single letters from INPUT-METHOD."
  (interactive
   (list (read-input-method-name "Use input method (default current): ")))
  (if (and input-method (symbolp input-method))
      (setq input-method (symbol-name input-method)))
  (let ((current current-input-method)
        (modifiers '(nil (control) (meta) (control meta))))
    (when input-method
      (activate-input-method input-method))
    (when (and current-input-method quail-keyboard-layout)
      (dolist (map (cdr (quail-map)))
        (let* ((to (car map))
               (from (quail-get-translation
                      (cadr map) (char-to-string to) 1)))
          (when (and (characterp from) (characterp to))
            (dolist (mod modifiers)
              (define-key local-function-key-map
                (vector (append mod (list from)))
                (vector (append mod (list to)))))))))
    (when input-method
      (activate-input-method current))))

(reverse-input-method 'russian-computer)

;; === Это чтобы понять, что мы дошли таки до конца файла
(message "Got to the end of .emacs")
